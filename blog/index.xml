<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on SihaoPedia ʕ•ᴥ•ʔ</title>
    <link>https://sihaog.github.io/blog/</link>
    <description>Recent content in Blogs on SihaoPedia ʕ•ᴥ•ʔ</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2023, Sihao Gao.</copyright>
    <lastBuildDate>Tue, 23 Apr 2024 19:24:11 +0800</lastBuildDate>
    <atom:link href="https://sihaog.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Migrate R Packages to an Offline Server</title>
      <link>https://sihaog.github.io/how-to-migrate-r-packages-to-an-offline-server/</link>
      <pubDate>Tue, 23 Apr 2024 19:24:11 +0800</pubDate>
      <guid>https://sihaog.github.io/how-to-migrate-r-packages-to-an-offline-server/</guid>
      <description>&lt;p&gt;I am recently conducting R analysis in a server connected to the database within the firewall, which means the computer has no access to the Internet.&lt;/p&gt;&#xA;&lt;p&gt;The Major problem with R offline analysis is that packages cannot be directly installed from CRAN.&lt;/p&gt;&#xA;&lt;p&gt;This article will illustrate how to migrate R packages from a computer with Internet access (Computer &lt;em&gt;&lt;strong&gt;Online&lt;/strong&gt;&lt;/em&gt;) to the offline server (Computer &lt;em&gt;&lt;strong&gt;Offline&lt;/strong&gt;&lt;/em&gt;).&lt;/p&gt;&#xA;&lt;h2 id=&#34;computer-online&#34;&gt;Computer &lt;em&gt;&lt;strong&gt;Online&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tools)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;getDependencies &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(packs){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dependencyNames &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unlist&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;package_dependencies&lt;/span&gt;(packages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; packs, db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;available.packages&lt;/span&gt;(), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    which &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Depends&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Imports&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    recursive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    packageNames &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;union&lt;/span&gt;(packs, dependencyNames)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    packageNames&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;installed &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.data.frame&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;installed.packages&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# List all packages. Expand the vector `target_pkgs`if additional packages are needed.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;target_pkgs &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(installed&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Package)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;packages &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDependencies&lt;/span&gt;(target_pkgs)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Download all packages to file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkgInfo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;download.packages&lt;/span&gt;(pkgs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; packages, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./downloads&amp;#39;&lt;/span&gt;, type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;win.binary&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write.csv&lt;/span&gt;(file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pkgFilenames.csv&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(pkgInfo[, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]), row.names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>JSON Introduction</title>
      <link>https://sihaog.github.io/json-introduction/</link>
      <pubDate>Wed, 26 Jul 2023 14:53:59 +0800</pubDate>
      <guid>https://sihaog.github.io/json-introduction/</guid>
      <description>&lt;p&gt;JSON stands for &lt;strong&gt;J&lt;/strong&gt;ava&lt;strong&gt;S&lt;/strong&gt;cript &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;N&lt;/strong&gt;otation&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;a file format for &lt;em&gt;data storage&lt;/em&gt; and &lt;em&gt;data exchange&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;json-stores-two-types-of-data&#34;&gt;JSON stores two types of data&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;An &lt;em&gt;&lt;strong&gt;object&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;An &lt;em&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/em&gt; of &lt;em&gt;&lt;strong&gt;values&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;object&#34;&gt;Object&lt;/h4&gt;&#xA;&lt;p&gt;An object starts with left curly brace &lt;code&gt;{&lt;/code&gt; and ends with a right curly brace &lt;code&gt;}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Inside of an object, the dictionary is formed by pairs of &lt;em&gt;&lt;strong&gt;property names&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;values&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Each property is separated from each other by a comma &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use GitHub</title>
      <link>https://sihaog.github.io/how-to-use-github/</link>
      <pubDate>Sat, 11 Mar 2023 15:22:01 +0800</pubDate>
      <guid>https://sihaog.github.io/how-to-use-github/</guid>
      <description>&lt;h2 id=&#34;what-is-github&#34;&gt;What is GitHub?&lt;/h2&gt;&#xA;&lt;p&gt;One word: a code hosting platform allowing &lt;strong&gt;version control&lt;/strong&gt; and collaboration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;github-vs-git&#34;&gt;GitHub vs Git&lt;/h3&gt;&#xA;&lt;p&gt;Git is local. Github is remote.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;git init&lt;/code&gt; creates a &lt;em&gt;&lt;strong&gt;new&lt;/strong&gt;&lt;/em&gt; Git repository.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;git add&lt;/code&gt; adds a local change to the &lt;em&gt;&lt;strong&gt;staging&lt;/strong&gt;&lt;/em&gt; area, which is not synced until &lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt; captures a snapshot of the &lt;em&gt;&lt;strong&gt;staged&lt;/strong&gt;&lt;/em&gt; changes – just like take a photo of the staged repository.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
